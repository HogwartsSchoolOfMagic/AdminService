<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.2</version>
        <relativePath/>
    </parent>

    <groupId>io.github.ninjaenterprise</groupId>
    <artifactId>admin-service</artifactId>
    <version>0.6.5</version>
    <name>Ninja Services: admin</name>
    <description>Admin service on "Spring Boot Admin"</description>
    <url>https://github.com/NinjaEnterprise/AdminService</url>

    <organization>
        <name>Vladislav Kuznetsov</name>
        <url>https://vk.com/vladislav_kuznetsov</url>
    </organization>

    <contributors>
        <contributor>
            <name>Vladislav Kuznetsov</name>
            <roles>
                <role>Java Developer</role>
            </roles>
        </contributor>
    </contributors>

    <properties>
        <!-- Pluggable Dependency Versions -->
        <spring-boot-admin-server.version>2.5.5</spring-boot-admin-server.version>
        <spring-cloud-dependencies.version>2021.0.0</spring-cloud-dependencies.version>
        <spring-boot.version>2.6.2</spring-boot.version>

        <!-- Plugin properties -->
        <checkstyle.version>9.1</checkstyle.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>

        <!-- Compiler properties -->
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Sonar Cloud -->
        <sonar.projectKey>NinjaEnterprise_AdminService</sonar.projectKey>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.organization>ninja-enterprise</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.sources>src/main/java</sonar.sources>
        <sonar.java.binaries>target/classes</sonar.java.binaries>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Boot: started microservice -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot: admin -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-server</artifactId>
            <version>${spring-boot-admin-server.version}</version>
        </dependency>

        <!-- Spring Cloud: discovery client -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring Cloud: configuration client -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-kafka</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring Cloud: auto retry connect into configuration server -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>docs/google-check-style.xml</configLocation>
                    <violationSeverity>warning</violationSeverity>
                    <consoleOutput>true</consoleOutput>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>